- id: 1
  name: "Maven"
  coreFrameworks:
    - "Spring Boot"
  projectFilesEdits:
    - fileType: "Xml"
      fileName: "pom"
      extension: "xml"
      content: |
        <?xml version="1.0" encoding="UTF-8"?>
        <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
            <modelVersion>4.0.0</modelVersion>
            <parent>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${frameworkVersion}</version>
                <relativePath/>
            </parent>
            <groupId>${groupLink}</groupId>
            <artifactId>${projectName}</artifactId>
            <version>0.0.1-SNAPSHOT</version>
            <name>${projectName}</name>
            <description>${projectDescription}</description>
            <url/>
            <licenses>
                <license/>
            </licenses>
            <developers>
                <developer/>
            </developers>
            <scm>
                <connection/>
                <developerConnection/>
                <tag/>
                <url/>
            </scm>
            <properties>
                <java.version>${languageVersion}</java.version>
                {{#if useCloud}}<spring-cloud.version>2023.0.3</spring-cloud.version>{{/if}}
            </properties>
            <dependencies>
                {{#each dependencies}}
                <dependency>
                    <groupId>${this.groupId}</groupId>
                    <artifactId>${this.artifactId}</artifactId>
                    <version>${this.version}</version>
                    <scope>${this.scope}</scope>
                </dependency>{{#if !@last}}{{newline}}        {{/if}}
                {{/each}}
                {{#if useDB}}<dependency>
                    <groupId>${DBgroupId}</groupId>
                    <artifactId>${DBartifactId}</artifactId>
                    <version>${DBversion}</version>
                </dependency>
        {{else}}{{removeLine}}
        {{removeLine}}
        {{removeLine}}
        {{removeLine}}
        {{removeLine}}{{/if}}
                {{#if useEurekaServer}}<dependency>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-actuator</artifactId>
                </dependency>{{/if}}
            </dependencies>
        {{#if useCloud}}
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.springframework.cloud</groupId>
                        <artifactId>spring-cloud-dependencies</artifactId>
                        <version>$[spring-cloud.version]</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                </dependencies>
            </dependencyManagement>{{/if}}        
        
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </project>

      destinationPath: "${destinationFolder}/${majStart(projectName)}/"
  projectFiles:
    - fileType: "Script"
      fileName: "mvnw"
      sourcePath: "data_genesis/maven/"
      destinationPath: "${destinationFolder}/${majStart(projectName)}/"

    - fileType: "ScriptWin"
      fileName: "mvnw.cmd"
      sourcePath: "data_genesis/maven/"
      destinationPath: "${destinationFolder}/${majStart(projectName)}/"
  projectFolders:
    - folderType: "MavenFolder"
      folderName: ".mvn"
      sourcePath: "data_genesis/maven/.mvn"
      destinationPath: "${destinationFolder}/${majStart(projectName)}/"

- id: 2
  name: "MSBuild for .NET "
  coreFrameworks:
    - ".NET"
  projectFilesEdits:
    - fileType: "HttpFile"
      fileName: "${majStart(projectName)}"
      extension: "http"
      content: |
        @TestDbCRUD_HostAddress = http://localhost:${projectPort}

        {{#each entities}}
        GET {{TestDbCRUD_HostAddress}}/${this}s
        Accept: application/json
        
        ###{{#if !@last}}{{newline}}{{/if}}{{/each}}

      destinationPath: "${destinationFolder}/${majStart(projectName)}/${majStart(projectName)}/"

    - fileType: "AppSettings"
      fileName: "appsettings"
      extension: "json"
      content: |
        {
          "Logging": {
            "LogLevel": {
              "Default": "${loggingLevel}",
              "Microsoft.AspNetCore": "${loggingLevel}"
            }
          },
          "AllowedHosts": "*"{{#if useDB}},
          "ConnectionStrings": {
            "DefaultConnection": "${connectionString}"
          }{{/if}},
          "PathBase": "/${toKebabCase(projectName)}"{{#if useEurekaServer}},
          "spring": {
            "application": {
              "name": "${projectName}"
            }
          },
          "eureka": {
            "client": {
              "serviceUrl": "${eurekaServerURL}",
              "shouldFetchRegistry": "false",
              "shouldRegisterWithEureka": true,
              "validateCertificates": false
            },
            "instance": {
              "appName": "${projectName}",
              "port": "${projectPort}",
              "hostname": "$[HOSTNAME]",
              "preferIpAddress": true
            },
            "Management": {
              "Endpoints": {
                "Actuator": {
                  "Exposure": {
                    "Include": [
                      "health",
                      "info",
                      "*"
                    ]
                  }
                },
                "Health": {
                  "ShowDetails": "Always"
                },
                "Info": {
                  "Application": {
                    "name": "${projectName}",
                    "description": "${projectDescription}",
                    "version": "0.0.1-SNAPSHOT"
                  }
                }
              }
            }
          }{{/if}}
        }

      destinationPath: "${destinationFolder}/${majStart(projectName)}/${majStart(projectName)}/"

    - fileType: "ProjectFile"
      fileName: "${majStart(projectName)}"
      extension: "csproj"
      content: |
        <Project Sdk="Microsoft.NET.Sdk.Web">
            <PropertyGroup>
                <TargetFramework>net${frameworkVersion}</TargetFramework>
                <Nullable>enable</Nullable>
                <ImplicitUsings>enable</ImplicitUsings>
                <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
                <RootNamespace>${projectName}</RootNamespace>
                <Description>${projectDescription}</Description>
            </PropertyGroup>
        
            <ItemGroup>
                {{#if useDB}}<PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="${frameworkVersion}.0">
                    <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
                    <PrivateAssets>all</PrivateAssets>
                </PackageReference>
                <PackageReference Include="${DBartifactId}" Version="${frameworkVersion}.0"/>{{/if}}
                <PackageReference Include="Swashbuckle.AspNetCore" Version="6.9.0"/>
                {{#if useEurekaServer}}<PackageReference Include="Steeltoe.Discovery.Eureka" Version="3.2.0"/>{{/if}}
                <PackageReference Include="Steeltoe.Management.Endpoint.Info" Version="1.1.0" />
                <PackageReference Include="Steeltoe.Management.Endpoint.Health" Version="1.1.0" />
                <PackageReference Include="Steeltoe.Management.EndpointCore" Version="3.2.0" />
                <PackageReference Include="Steeltoe.Management.TracingCore" Version="3.2.0" />
            </ItemGroup>
        </Project>

      destinationPath: "${destinationFolder}/${majStart(projectName)}/${majStart(projectName)}/"

    - fileType: "SolutionFile"
      fileName: "${majStart(projectName)}"
      extension: "sln"
      content: |
        Microsoft Visual Studio Solution File, Format Version 12.00
        
        Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "${majStart(projectName)}", "${majStart(projectName)}\${majStart(projectName)}.csproj", "{B06BF436-528B-4DF7-9F86-6F86B6A77E84}"
        EndProject
        Global
            GlobalSection(SolutionConfigurationPlatforms) = preSolution
                Debug|Any CPU = Debug|Any CPU
                Release|Any CPU = Release|Any CPU
            EndGlobalSection
            GlobalSection(ProjectConfigurationPlatforms) = postSolution
                {B06BF436-528B-4DF7-9F86-6F86B6A77E84}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
                {B06BF436-528B-4DF7-9F86-6F86B6A77E84}.Debug|Any CPU.Build.0 = Debug|Any CPU
                {B06BF436-528B-4DF7-9F86-6F86B6A77E84}.Release|Any CPU.ActiveCfg = Release|Any CPU
                {B06BF436-528B-4DF7-9F86-6F86B6A77E84}.Release|Any CPU.Build.0 = Release|Any CPU
            EndGlobalSection
        EndGlobal
      destinationPath: "${destinationFolder}/${majStart(projectName)}/"

    - fileType: "LaunchSettingsFile"
      fileName: "launchSettings"
      extension: "json"
      content: |
        {
          "$schema": "http://json.schemastore.org/launchsettings.json",
          "iisSettings": {
            "windowsAuthentication": false,
            "anonymousAuthentication": true,
            "iisExpress": {
              "applicationUrl": "http://localhost:53034/${toKebabCase(projectName)}",
              "sslPort": 44349
            }
          },
          "profiles": {
            "http": {
              "commandName": "Project",
              "dotnetRunMessages": true,
              "launchBrowser": true,
              "launchUrl": "swagger",
              "applicationUrl": "http://localhost:${projectPort}/${toKebabCase(projectName)}",
              "environmentVariables": {
                "ASPNETCORE_ENVIRONMENT": "Development"
              }
            },
            "https": {
              "commandName": "Project",
              "dotnetRunMessages": true,
              "launchBrowser": true,
              "launchUrl": "swagger",
              "applicationUrl": "https://localhost:7273/${toKebabCase(projectName)};http://localhost:${projectPort}",
              "environmentVariables": {
                "ASPNETCORE_ENVIRONMENT": "Development"
              }
            },
            "IIS Express": {
              "commandName": "IISExpress",
              "launchBrowser": true,
              "launchUrl": "swagger",
              "environmentVariables": {
                "ASPNETCORE_ENVIRONMENT": "Development"
              }
            }{{#if useEurekaServer}},
            "${projectName}": {
              "commandName": "Project",
              "launchBrowser": true,
              "launchUrl": "swagger",
              "applicationUrl": "http://localhost:${projectPort}/${toKebabCase(projectName)}",
              "environmentVariables": {
                "ASPNETCORE_ENVIRONMENT": "Development"
              }
            }
            {{/if}}
          }
        }
      destinationPath: "${destinationFolder}/${majStart(projectName)}/${majStart(projectName)}/Properties/"


  projectFiles:
    - fileType: "appSettingsDeveloppement"
      fileName: "appsettings.Development.json"
      sourcePath: "data_genesis/csharp/"
      destinationPath: "${destinationFolder}/${majStart(projectName)}/${majStart(projectName)}/"

  projectFolders: [ ]